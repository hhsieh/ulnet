library(igraph)

## without plot boundaries
x <- rnorm(100) * 100
y <- rnorm(100) * 100
data <- cbind(x,y)
head(data)

dist <- as.matrix(dist(data))
nt_exp <- function(d, lambda) {
  prob <- exp(-lambda * dist) 
  DM <- rbinom(length(prob), size = 1, prob =  prob) #the problem with stochasticity is the network becomes directional
  DM <- matrix(DM, nrow = nrow(dist), ncol = ncol(dist))
  DM[lower.tri(DM)] <- (t(DM)[lower.tri(DM)] == 1)
  diag(DM) = 0
  I <- diag(1, nrow=nrow(dist), ncol=ncol(dist))
  D <- sapply(1:nrow(dist), function(z) DM[,z]/(z+1))
  inv <- solve(I-D)
  
  edg_from <- function(x) replicate(length(which(DM[,x]!=0)),x)
  edg_to <- function(x) which(DM[,x]!=0)
  X_cord_from <- function(x) replicate(length(edg_from(x)), myCsv$Xplot[x])
  Y_cord_from <- function(x) replicate(length(edg_from(x)), myCsv$Yplot[x])
  X_cord_to <- function(x) myCsv$Xplot[which(DM[,x]!=0)]
  Y_cord_to <- function(x) myCsv$Yplot[which(DM[,x]!=0)]
  
  edg_f <- list()
  N <- nrow(dist)
  for (i in 1:N) {
    edg_f[[i]] = data.frame(edg_from = edg_from(i), edg_to = edg_to(i), X_cord_from = X_cord_from(i), Y_cord_from = Y_cord_from(i), X_cord_to = X_cord_to(i), Y_cord_to = Y_cord_to(i)) 
  }
  
  edges <- do.call(rbind, edg_f)
  
  id <- c(1:nrow(dist))
  
  tt <- function(x) length(which(inv[,x]!=0))
  cmtsize <- sapply(1:nrow(dist), tt)
  zz <- function(x) which(inv[,x]!=0)[1] #this gives the first node of each compartment as a representative of the compartment label
  comp <- sapply(1:nrow(dist), zz)
  
  vertices <- data.frame(id, comp, cmtsize)
  #vertices <- data.frame(id, cmtsize)
  for_compsizefreq <- unique(vertices[,c(2,3)])
  compsize <- for_compsizefreq$comp_size
  compsize_freq <- table(compsize)
    
  compartment_size_freq <- table(cmtsize)
    return(list(nodes = vertices, edges = edges, compartment_size_freq = table(for_compsizefreq)))
  
}



nt <- function(d) {
  DM <- matrix(0, nrow = nrow(dist), ncol = ncol(dist))
  DM <- dist[] < d
  diag(DM) = 0
  I <- diag(1, nrow = nrow(dist), ncol = ncol(dist))
  D <- sapply(1:nrow(dist), function(z) DM[,z]/(z+1))
  inv <- solve(I-D)
  
  edg_from <- function(x) replicate(length(which(DM[,x]!=0)),x)
  edg_to <- function(x) which(DM[,x]!=0)
  X_cord_from <- function(x) replicate(length(edg_from(x)), myCsv$Xplot[x])
  Y_cord_from <- function(x) replicate(length(edg_from(x)), myCsv$Yplot[x])
  X_cord_to <- function(x) myCsv$Xplot[which(DM[,x]!=0)]
  Y_cord_to <- function(x) myCsv$Yplot[which(DM[,x]!=0)]
  
  edg_f <- list()
  N <- nrow(dist)
  for (i in 1:N) {
    edg_f[[i]] = data.frame(edg_from = edg_from(i), edg_to = edg_to(i), X_cord_from = X_cord_from(i), Y_cord_from = Y_cord_from(i), X_cord_to = X_cord_to(i), Y_cord_to = Y_cord_to(i)) 
  }
  
  edges <- do.call(rbind, edg_f)
  
  id <- c(1:nrow(dist))
  
  tt <- function(x) length(which(inv[,x]!=0))
  cmtsize <- sapply(1:nrow(dist), tt)
  zz <- function(x) which(inv[,x]!=0)[1] #this gives the first node of each compartment as a representative of the compartment label
  comp <- sapply(1:nrow(dist), zz)
  
  vertices <- data.frame(id, comp, cmtsize)
  #vertices <- data.frame(id, cmtsize)
  for_compsizefreq <- unique(vertices[,c(2,3)])
  compsize <- for_compsizefreq$cmtsize
  cmtsize_freq <- table(compsize)
  
  compartment_size_freq <- table(cmtsize)
  return(list(nodes = vertices, edges = edges, compartment_size_freq = cmtsize_freq))
  
}
